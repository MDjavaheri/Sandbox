	/**
	 * Runs quick sort on the array
	 * @param array to sort
	 * @param low first index of the section to be sorted
	 * @param high last index of the section to be sorted
	 */
	public static void quickSort(int[] array, int low, int high) {
		if (low < high) {
			int pivot = partition(array, low, high); //final position of the pivot
			quickSort(array, low, pivot - 1);
			quickSort(array, pivot + 1, high);
		}
	}
	/**
	 * partitions the array for quick sort
	 * @param array to be partitioned
	 * @param low first index of array section
	 * @param high last index of array section
	 * @return pivot index
	 */
	public static int partition(int[] array, int low, int high) {
		int x = array[high];
		int i = low - 1;
		for (int j = low; j < high - 1; j++) {
			if (array[j] <= x) {
				i++;
				int temp = array[j];                //swap elements
		        array[j] = array[i];
		        array[i] = temp;
			}
		}
		int temp = array[i + 1];                //swap elements
        array[i + 1] = array[high];
        array[high] = temp;
		//swap(array, array[i + 1], array[high]);
		return (i + 1);
	}